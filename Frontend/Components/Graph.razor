@using ChartJs.Blazor
@using ChartJs.Blazor.Common
@using ChartJs.Blazor.Common.Axes
@using ChartJs.Blazor.Common.Handlers
@using ChartJs.Blazor.Common.Time
@using ChartJs.Blazor.LineChart
@using ChartJs.Blazor.Util
@using System.Linq
@using Models

@code {
    [Parameter]
    public List<Reading> Data { get; set; }

    private LineConfig LineConfig { get; set; }

    protected override void OnInitialized()
    {
        // Initialize the chart configuration
        LineConfig = new LineConfig
        {
            Options = new LineOptions
            {
                Responsive = true,
                Title = new OptionsTitle
                {
                    Display = true,
                    Text = "ChartJs.Blazor Time Scale Chart"
                },
                Scales = new Scales
                {
                    XAxes = new List<CartesianAxis>
                    {
                        new TimeAxis
                        {
                            ScaleLabel = new ScaleLabel
                            {
                                LabelString = "Date"
                            },
                            Time = new TimeOptions
                            {
                                TooltipFormat = "11 HH:mm"
                            },
                        }
                    },
                    YAxes = new List<CartesianAxis>
                    {
                        new LinearCartesianAxis
                        {
                            ScaleLabel = new ScaleLabel
                            {
                                LabelString = "Value"
                            }
                        }
                    }
                }
            }
        };

        // Map data for each property
        var tempDataset = new LineDataset<TimePoint>() 
        { 
            Label = "Temperature", 
            BackgroundColor = ColorUtil.ColorString(75, 192, 192), 
            BorderColor = ColorUtil.ColorString(75, 192, 192), Fill = false 
        };
        var co2Dataset = new LineDataset<TimePoint>() 
        { 
            Label = "CO2 Level", 
            BackgroundColor = ColorUtil.ColorString(255, 99, 132), 
            BorderColor = ColorUtil.ColorString(255, 99, 132), 
            Fill = false 
        };
        var humidityDataset = new LineDataset<TimePoint>() 
        { 
            Label = "Humidity", 
            BackgroundColor = ColorUtil.ColorString(54, 162, 235),
            BorderColor = ColorUtil.ColorString(54, 162, 235),
            Fill = false 
        };

        foreach (var item in Data)
        {
            var time = DateTimeOffset.FromUnixTimeSeconds(item.UnixTime).DateTime;
            tempDataset.Add(new TimePoint(time, item.Temp));
            co2Dataset.Add(new TimePoint(time, item.CO2Level));
            humidityDataset.Add(new TimePoint(time, item.Humidity));
        }

        // Add datasets and labels to chart
        LineConfig.Data.Datasets.Add(tempDataset);
        LineConfig.Data.Datasets.Add(co2Dataset);
        LineConfig.Data.Datasets.Add(humidityDataset);
    }
}
